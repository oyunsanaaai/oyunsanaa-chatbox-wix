// api/oy-chat.js ‚Äî Oyunsanaa (Vision + Persona + Identity + CORS)

export default async function handler(req, res) {
  try {
    // --- [CORS: Wix-—ç—ç—Å —à—É—É–¥ –¥—É—É–¥–∞—Ö “Ø–µ–¥ —Ö—ç—Ä—ç–≥ –±–æ–ª–Ω–æ; –Ω—ç–≥ –¥–æ–º—ç–π–Ω–¥ –±–∞–π–≤–∞–ª –∑“Ø–≥—ç—ç—Ä] ---
    res.setHeader('Access-Control-Allow-Origin', '*'); // —ç—Å–≤—ç–ª ”©”©—Ä–∏–π–Ω –¥–æ–º—ç–π–Ω–æ–æ —Ç–∞–≤—å–∂ –±–æ–ª–Ω–æ
    res.setHeader('Access-Control-Allow-Methods', 'POST,OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    if (req.method === 'OPTIONS') return res.status(204).end();

    if (req.method !== 'POST') {
      return res.status(405).json({ error: 'method_not_allowed' });
    }

    const body = await readJson(req);
    const msg = getUserMsg(body);
    if (!msg) return res.status(400).json({ error: 'Empty message' });

    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) return res.status(500).json({ error: 'missing_key', hint: 'OPENAI_API_KEY' });

    // ==== CORE IDENTITY (–û—é—É–Ω—Å–∞–Ω–∞–∞ ”©”©—Ä–∏–π–≥”©”© —Ç–∞–Ω–∏–Ω–∞) ====
    const CORE_ID = `
–ß–∏ "–û—é—É–Ω—Å–∞–Ω–∞–∞" –Ω—ç—Ä—Ç—ç–π —á–∞—Ç —Ç—É—Å–ª–∞—Ö.
- –ó”©–≤—Ö”©–Ω –º–æ–Ω–≥–æ–ª–æ–æ—Ä —è—Ä—å.
- ”®”©—Ä–∏–π–≥”©”© “Ø—Ä–≥—ç–ª–∂ "–û—é—É–Ω—Å–∞–Ω–∞–∞" –≥—ç–∂ –Ω—ç—Ä–ª—ç. "–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞ –±–∏—à" –≥—ç—Ö “Ø–≥—Å–∏–π–≥ —Ö—ç–ª–∂ –±–æ–ª–æ—Ö–≥“Ø–π.
- –•–∞—Ä–∏—É 2‚Äì5 ”©–≥“Ø“Ø–ª–±—ç—Ä—Ç –±–∞–≥—Ç—Å–∞–Ω, —ç–µ–ª–¥—ç–≥, —Ö—ç—Ä—ç–≥—Ç—ç–π –Ω—ç–≥ –∂–∏–∂–∏–≥ –∞–ª—Ö–∞–º —Å–∞–Ω–∞–ª –±–æ–ª–≥–æ—Ö –º–∞—è–≥ –±–∞—Ä–∏–º—Ç–∞–ª.
- –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–≥ —à–∞—Ö–∞—Ö–≥“Ø–π; —Å–æ–Ω–≥–æ–ª—Ç—ã–≥ –Ω—å —Ö“Ø–Ω–¥—ç–ª–∂, —É—Ä–∞–º ”©–≥.
- –•—ç—Ç —É—Ä—Ç –∂–∞–≥—Å–∞–∞–ª—Ç, –ª–µ–∫—Ü –º–∞—è–≥–∏–π–Ω –±–∏—á–≤—ç—Ä—ç—ç—Å –∑–∞–π–ª—Å—Ö–∏–π.
`.trim();

    // ==== PERSONA ====
    const persona = String(body.persona || 'soft').trim();
    const PERSONA =
      persona === 'tough'  ? '–ß–∏ —Ö–∞—Ç—É—É–≤—Ç–∞—Ä, —à—É—É–¥ –≥–æ–ª—ã–≥ –Ω—å —Ö—ç–ª–∂ —á–∏–≥–ª“Ø“Ø–ª–¥—ç–≥.' :
      persona === 'wise'   ? '–ß–∏ —É—Ö–∞–∞–ª–∞–≥, —Ç–∞–π–≤–∞–Ω, —Ç—ç–Ω—Ü–≤—ç—Ä—Ç—ç–π —Ç–∞–π–ª–±–∞—Ä–ª–∞–¥–∞–≥.' :
      persona === 'parent' ? '–ß–∏ —ç—ç–∂/–∞–∞–≤ —à–∏–≥ –¥—É–ª–∞–∞–Ω, —Ç–∞–π–≤—à—Ä—É—É–ª–∂ –¥—ç–º–∂–¥—ç–≥.' :
                              '–ß–∏ –∑”©”©–ª”©–Ω, —Ö–∞–ª–∞–º–∂—Ç–∞–π, —Ö”©–≥–∂–∏–ª—Ç—ç–π ”©–Ω–≥”© –∞—è—Å–∞–∞—Ä —è—Ä—å.';

    // ==== KNOWLEDGE (—à–∏–π–¥–≤—ç—Ä–≥“Ø–π –±–æ–ª —Ö–æ–æ—Å–æ–Ω “Ø–ª–¥—ç—ç–Ω—ç) ====
    // –•–æ–∂–∏–º /knowledge/oy.md —Ñ–∞–π–ª –Ω—ç–º—á–∏—Ö—ç—ç–¥ loadKnowledge() –¥—É—É–¥–∞–∂ context —Ö–æ–ª–±–æ–Ω–æ.
    const context = ''; // await loadKnowledge();

    // ==== IMAGES (Vision) ====
    const images = Array.isArray(body.images) ? body.images.filter(Boolean) : [];
    const hasImages = images.length > 0;

    // ==== MESSAGES ====
    const systemMessage = {
      role: 'system',
      content: [CORE_ID, PERSONA, context ? `\n[Context]\n${context}` : ''].join('\n')
    };

    let userMessage;
    if (hasImages) {
      // dataURL —ç—Å–≤—ç–ª absolute URL-—É—É–¥—ã–≥ image_url —Ñ–æ—Ä–º–∞—Ç —Ä—É—É —Ö”©—Ä–≤“Ø“Ø–ª–Ω—ç
      const imageParts = images.map(u => ({
        type: 'image_url',
        image_url: { url: String(u) } // data:image/...;base64,*** –±–∞–π–∂ –±–æ–ª–Ω–æ
      }));
      userMessage = { role: 'user', content: [{ type: 'text', text: msg }, ...imageParts] };
    } else {
      userMessage = { role: 'user', content: msg };
    }

    const messages = [systemMessage, userMessage];

    // ==== MODEL —Å–æ–Ω–≥–æ–ª—Ç ====
    // –ó—É—Ä–∞–≥—Ç–∞–π –±–æ–ª –∑–∞–∞–≤–∞–ª 4o (Vision), –∑—É—Ä–∞–≥–≥“Ø–π –±–æ–ª –∏—Ä—Å—ç–Ω model-–∏–π–≥ —Ö—ç—Ä—ç–≥–ª—ç–Ω—ç (–∞–Ω—Ö–¥–∞–≥—á 4o-mini)
    const clientModel = String(body.model || '').trim();
    const model = hasImages ? 'gpt-4o' : (clientModel || 'gpt-4o-mini');

    // ==== OpenAI –¥—É—É–¥–ª–∞–≥–∞ ====
    const r = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${apiKey}` },
      body: JSON.stringify({
        model,
        messages,
        temperature: 0.6,
        top_p: 0.85,
        presence_penalty: 0.2,
        frequency_penalty: 0.8,
        max_tokens: Math.min(180, Number(body.max_tokens_hint || 160)),
        stop: ['\n\n', '###']
      })
    });

    if (!r.ok) {
      const detail = await r.text().catch(() => '');
      return res.status(r.status).json({ error: 'upstream', detail });
    }

    const data = await r.json();
    let reply = data.choices?.[0]?.message?.content || '';

    // ==== –•–∞—Ä–∏—É–≥ —Ü—ç–≥—Ü—ç–ª–∂, identity-–≥ –±–∞—Ç–∞—Ç–≥–∞—Ö ====
    const isFirstTurn = !Array.isArray(body.history) || body.history.length === 0;
    reply = cleanMarkdown(reply);
    reply = enforceIdentity(reply);
    reply = clipReply(reply, { maxSentences: 5, maxChars: 420 });
    reply = addIntroOnce(reply, isFirstTurn, persona);
    reply = addWarmClosing(reply, persona);

    return res.status(200).json({ reply, model: data.model || model, persona });
  } catch (e) {
    console.error(e);
    return res.status(500).json({ error: 'server', detail: String(e?.message || e) });
  }
}

/* ========= Helpers ========= */

async function readJson(req) {
  if (req.body && typeof req.body === 'object') return req.body;
  const text = await new Response(req.body || null).text();
  try { return JSON.parse(text || '{}'); } catch { return {}; }
}
function getUserMsg(body) {
  if (typeof body?.msg === 'string') return body.msg.trim();
  if (Array.isArray(body?.messages)) {
    const u = body.messages.find(m => m?.role === 'user')?.content;
    if (typeof u === 'string') return u.trim();
  }
  return '';
}
function cleanMarkdown(s='') {
  return String(s)
    .replace(/^\s*#{1,6}\s*/gm, '')
    .replace(/^\s*[-*]\s+/gm, '‚Ä¢ ')
    .replace(/\n{3,}/g, '\n\n')
    .trim();
}
function clipReply(s, { maxSentences=5, maxChars=420 } = {}) {
  let t = s.trim();
  const parts = t.split(/(?<=[\.!?‚Ä¶])\s+|\n+/).filter(Boolean);
  t = parts.slice(0, maxSentences).join(' ');
  if (t.length > maxChars) t = t.slice(0, maxChars).replace(/\s+\S*$/, '') + '‚Ä¶';
  return t;
}
function addIntroOnce(s, isFirst, persona) {
  if (!isFirst) return s;
  const head = {
    soft:   '–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞. –ë–∏ –æ–π–ª–≥–æ–∂ –±–∞–π–Ω–∞. ',
    tough:  '–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞. –û–π–ª–≥–æ–ª–æ–æ. ',
    wise:   '–ë–∏ –û—é“Ø–Ω—Å–∞–Ω–∞–∞. –°–∞–π–Ω –±–∞–π–Ω–∞, –æ–π–ª–≥–æ–ª–æ–æ. ',
    parent: '–ë–∏ –û—é“Ø–Ω—Å–∞–Ω–∞–∞. –ó“Ø–≥—ç—ç—Ä –¥—ç—ç. '
  }[persona] || '–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞. –û–π–ª–≥–æ–ª–æ–æ. ';
  return head + s;
}
function addWarmClosing(s, persona) {
  const end =
    persona === 'tough'  ? ' –û–¥–æ–æ –Ω—ç–≥ –∂–∏–∂–∏–≥ –∞–ª—Ö–º–∞–∞—Ä —ç—Ö—ç–ª—å–µ?' :
    persona === 'parent' ? ' ”®–Ω”©”©–¥”©—Ä ”©”©—Ä—Ç”©”© –±–∞–≥–∞—Ö–∞–Ω —á –≥—ç—Å—ç–Ω –∞–Ω—Ö–∞–∞—Ä–∞–∞—Ä–∞–π. üòä' :
    persona === 'wise'   ? ' –ë—ç–ª—ç–Ω –±–æ–ª –¥–∞—Ä–∞–∞–≥–∏–π–Ω –∂–∏–∂–∏–≥ —Ö—ç—Å–≥–∏–π–≥ —Ç–æ–¥—Ä—É—É–ª—ä—è.' :
                           ' –•“Ø—Å–≤—ç–ª —Ü–∞–∞—à —è—Ä–∏–ª—Ü—ä—è. üí¨';
  return /[?!]$/.test(s) ? s : s + end;
}
function enforceIdentity(s='') {
  const bad = /(–±–∏\s+–æ—é—É–Ω—Å–∞–Ω–∞–∞\s+–±–∏—à|I\s*am\s*not\s*Oyunsanaa)/i;
  if (bad.test(s)) s = s.replace(bad, '–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞.');
  s = s.replace(/\b(GPT|assistant|—á–∞—Ç–±–æ—Ç)\b/gi, '–û—é—É–Ω—Å–∞–Ω–∞–∞');
  return s.trim();
}

/*
// –•—ç—Ä—ç–≤ –¥–∞—Ä–∞–∞ –Ω—å —Ç”©—Å–ª–∏–π–Ω —Ç–∞–Ω–∏–ª—Ü—É—É–ª–≥–∞/FAQ-–≥ —Ñ–∞–π–ª–¥ –±–∏—á–∏–∂ —É–Ω—à—É—É–ª–∞—Ö –±–æ–ª:
// 1) —Ä–µ–ø–æ-–¥–æ–æ knowledge/oy.md “Ø“Ø—Å–≥—ç—ç–¥ —Ö—ç–¥—Ö—ç–Ω –¥–æ–≥–æ–ª –º”©—Ä —Ç–∞–Ω–∏–ª—Ü—É—É–ª–≥–∞–∞ –±–∏—á
// 2) –¥—ç—ç—Ä context-–¥ loadKnowledge() –¥—É—É–¥–∞–∂ —Ö–æ–ª–±–æ

import fs from 'node:fs/promises';
async function loadKnowledge(){
  try{
    return await fs.readFile(process.cwd() + '/knowledge/oy.md', 'utf8');
  }catch{ return ''; }
}
*/
