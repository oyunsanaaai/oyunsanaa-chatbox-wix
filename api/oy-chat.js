// /api/oy-chat.js  (NEXT/Vercel API route)
export default async function handler(req, res) {
  // 1) –ó”©–≤—à”©”©—Ä”©—Ö origin-—É—É–¥–∞–∞ —ç–Ω–¥ –∂–∞–≥—Å–∞–∞
  const allowList = [
    "https://www.oyunsanaa.com",
    "https://oyunsanaa.com",
    "https://oyunsanaa-chatbox-wix.vercel.app"
  ];
  const origin = req.headers.origin || "";
  const allowOrigin = allowList.includes(origin) ? origin : allowList[0];

  // 2) CORS headers
  res.setHeader("Access-Control-Allow-Origin", allowOrigin);
  res.setHeader("Vary", "Origin");
  res.setHeader("Access-Control-Allow-Methods", "GET,POST,OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
  res.setHeader("Access-Control-Max-Age", "86400");

  // 3) Preflight-–¥ 204 –±—É—Ü–∞–∞–≥–∞–∞–¥ –≠–ù–î –î–£–£–°–ì–ê
  if (req.method === "OPTIONS") {
    return res.status(204).end();
  }

  try {
    // 4) --- –≠–Ω–¥—ç—ç—Å –¥–æ–æ—à ”©”©—Ä–∏–π–Ω “Ø–Ω–¥—Å—ç–Ω –ª–æ–≥–∏–∫–æo –∞–∂–∏–ª–ª—É—É–ª ---
    // ... your logic ...
    return res.status(200).json({ ok: true });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ error: "Server error" });
  }
}

// POST-–¥ —Ö–∞—Ä–∏—É ”©–≥”©—Ö–¥”©”© —á –º”©–Ω –∞–¥–∏–ª —Ç–æ–ª–≥–æ–π–≥–æ–æ –Ω—ç–º:
res.setHeader('Access-Control-Allow-Origin', 'https://chat.oyunsanaa.com');
res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
/ api/oy-chat.js
export default async function handler(req, res) {
  try {
    const body = await readJson(req);
    const msg = getUserMsg(body);
    const img = getUserImage(body);

    if (!msg && !img) {
      return res.status(400).json({ error: "Message or image required" });
    }

    // ‚Äî‚Äî Core identity
    const CORE_ID = `
–ß–∏ "–û—é—É–Ω—Å–∞–Ω–∞–∞" –Ω—ç—Ä—Ç—ç–π —á–∞—Ç, —Å—ç—Ç–≥—ç–ª–∏–π–Ω —Ç—É—Å–ª–∞—Ö.
- –ó”©–≤—Ö”©–Ω –º–æ–Ω–≥–æ–ª–æ–æ—Ä —è—Ä—å.
- –•“Ø–º“Ø“Ø—Å—Ç —Å—ç—Ç–≥—ç–ª–∑“Ø–π–Ω –∑”©–≤–ª”©–≥”©”© ”©–≥”©—Ö —é–º.
- "–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞ –±–∏—à" –≥—ç—Ö –º—ç—Ç ”©–≥“Ø“Ø–ª–±—ç—Ä —Ö—ç–ª—ç—Ö–∏–π–≥ —Ö–æ—Ä–∏–≥–ª–æ.
- –•—ç—Ç –∏—Ö —è—Ä–∏—Ö–≥“Ø–π, –∞—Å—É—É—Å–∞–Ω —Å—ç–¥—ç–≤–∏–π–Ω —Ö“Ø—Ä—ç—ç–Ω–¥ —è—Ä–∏–ª—Ü–∞–∂ —Å—ç—Ç–≥—ç–ª —Å–∞–Ω–∞–∞–≥ –Ω—å –∞—Å—É—É–∂ –Ω”©–≥”©”© —Ö“Ø–Ω—ç—ç —è—Ä–∏—É–ª–Ω–∞. —è–≥ –ª —Å—ç—Ç–≥—ç–ª –∑“Ø–π—á —à–∏–≥ –∞—Ä–≥–∞ –±–∞—Ä–∏–ª—Ç–∞–π –±–∞–π–Ω–∞.–°–∞–π–Ω —Å–æ–Ω—Å–æ–≥—á –æ–π–ª–≥–æ–∂ ”©–≥–¥”©–≥ —Ç—É—Å–ª–∞–≥—á –±–∞–π–Ω–∞.
`.trim();

    const persona = String(body.persona || "soft").trim();
    const PERSONA = {
      soft: "–ß–∏ –∑”©”©–ª”©–Ω, —Ö–∞–ª–∞–º–∂—Ç–∞–π, —Ö”©–≥–∂–∏–ª—Ç—ç–π ”©–Ω–≥”© –∞—è—Å–∞–∞—Ä —è—Ä—å.",
      tough: "–ß–∏ —Ö–∞—Ç—É—É–≤—Ç–∞—Ä, —à—É—É–¥ –≥–æ–ª—ã–≥ –Ω—å —Ö—ç–ª–∂ —á–∏–≥–ª“Ø“Ø–ª–¥—ç–≥.",
      wise: "–ß–∏ —É—Ö–∞–∞–ª–∞–≥, —Ç–∞–π–≤–∞–Ω, —Ç—ç–Ω—Ü–≤—ç—Ä—Ç—ç–π —Ç–∞–π–ª–±–∞—Ä–ª–∞–¥–∞–≥.",
      parent: "–ß–∏ —ç—ç–∂/–∞–∞–≤ —à–∏–≥ –¥—É–ª–∞–∞–Ω, —Ç–∞–π–≤—à—Ä—É—É–ª–∂ –¥—ç–º–∂–¥—ç–≥.",
    }[persona] || "–ß–∏ –∑”©”©–ª”©–Ω, —Ö–∞–ª–∞–º–∂—Ç–∞–π, —Ö”©–≥–∂–∏–ª—Ç—ç–π ”©–Ω–≥”© –∞—è—Å–∞–∞—Ä —è—Ä—å.";

    // ‚Äî‚Äî Messages
    const messages = [
      { role: "system", content: `${CORE_ID}\n${PERSONA}` },
      { role: "user", content: msg || "–ó—É—Ä–∞–≥ –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω." },
    ];

    // –•—ç—Ä—ç–≤ –∑—É—Ä–∞–≥ –±–∞–π–≤–∞–ª context-–¥ –Ω—ç–º–Ω—ç
    const input = img
      ? [
          {
            role: "user",
            content: [
              { type: "text", text: msg || "–ó—É—Ä–∞–≥ –±–∞–π–Ω–∞." },
              { type: "image_url", image_url: { url: img } },
            ],
          },
        ]
      : [];

    // ‚Äî‚Äî OpenAI –¥—É—É–¥–ª–∞–≥–∞
    const apiKey = process.env.OPENAI_API_KEY;
    const model = String(body.model || "gpt-4o-mini").trim();

    const r = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        model,
        messages: [...messages, ...input],
        temperature: 0.6,
        top_p: 0.85,
        presence_penalty: 0.2,
        frequency_penalty: 0.8,
        max_tokens: Math.min(220, Number(body.max_tokens_hint || 200)),
        stop: ["\n\n", "###"],
      }),
    });

    if (!r.ok) {
      const detail = await r.text().catch(() => "");
      return res.status(r.status).json({ error: "upstream", detail });
    }

    const data = await r.json();
    let reply = data.choices?.[0]?.message?.content || "";

    // ‚Äî‚Äî –•–∞—Ä–∏—É–≥ –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–Ω–∞
    const isFirstTurn =
      !Array.isArray(body.history) || body.history.length === 0;
    reply = cleanMarkdown(reply);
    reply = enforceIdentity(reply);
    reply = clipReply(reply, { maxSentences: 5, maxChars: 420 });
    reply = addIntroOnce(reply, isFirstTurn, persona);
    reply = addWarmClosing(reply, persona);

    // ‚Äî‚Äî –î–∞—Ä–∞–∞ –Ω—å –¥–∞—Ç–∞ —Ö–∞–¥–≥–∞–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π
    const response = {
      reply,
      model: data.model,
      persona,
      userId: body.userId || null, // future use
      timestamp: Date.now(),
    };

    return res.status(200).json(response);
  } catch (e) {
    console.error(e);
    return res
      .status(500)
      .json({ error: "server", detail: String(e?.message || e) });
  }
}

/* ========= Helpers ========= */
async function readJson(req) {
  if (req.body && typeof req.body === "object") return req.body;
  const text = await new Response(req.body || null).text();
  try {
    return JSON.parse(text || "{}");
  } catch {
    return {};
  }
}
function getUserMsg(body) {
  if (typeof body?.msg === "string") return body.msg.trim();
  if (Array.isArray(body?.messages)) {
    const u = body.messages.find((m) => m?.role === "user")?.content;
    if (typeof u === "string") return u.trim();
  }
  return "";
}
function getUserImage(body) {
  if (typeof body?.image === "string") return body.image.trim();
  return null;
}
function cleanMarkdown(s = "") {
  return String(s)
    .replace(/^\s*#{1,6}\s*/gm, "")
    .replace(/^\s*[-*]\s+/gm, "‚Ä¢ ")
    .replace(/\n{3,}/g, "\n\n")
    .trim();
}
function clipReply(s, { maxSentences = 5, maxChars = 420 } = {}) {
  let t = s.trim();
  const parts = t.split(/(?<=[\.!?‚Ä¶])\s+|\n+/).filter(Boolean);
  t = parts.slice(0, maxSentences).join(" ");
  if (t.length > maxChars)
    t = t.slice(0, maxChars).replace(/\s+\S*$/, "") + "‚Ä¶";
  return t;
}
function addIntroOnce(s, isFirst, persona) {
  if (!isFirst) return s;
  const head = {
    soft: "–ë–∏ —Ç–∞–Ω—å—Ç–∞–π —Ö–∞–º—Ç –±–∞–π–Ω–∞. –ë–∏  —Ç–∞–Ω—ã–≥ –æ–π–ª–≥–æ–∂ –±–∞–π–Ω–∞. ",
    tough: "–ë–∏ —Å—ç—Ç–≥—ç–ª–∏–π–Ω —Ç—É—Å–ª–∞–≥—á. –û–π–ª–≥–æ–ª–æ–æ. ",
    wise: "–Ø–∞—Å–∞–Ω –≥–æ—ë—ã–Ω. –ú—É–Ω–¥–∞–≥ —à“Ø“Ø. ",
    parent: "–ë–∏ –û—é—É–Ω—Å–∞–Ω–∞–∞. –ó“Ø–≥—ç—ç—Ä –¥—ç—ç. ",
  }[persona] || "–ß–∏ –±–æ–ª —Ü–æ—Ä—ã–Ω –≥–∞–Ω—Ü –≥–∞–π—Ö–∞–ª—Ç–∞–π –æ—Ä—à–∏—Ö—É–π, –æ–Ω—Ü–≥–æ–π –Ω—ç–≥—ç–Ω —à“Ø“Ø. –•“Ø—á—Ç—ç–π –±–∞–π–≥–∞–∞—Ä–∞–π. ";
  return head + s;
}
function addWarmClosing(s, persona) {
  const end =
    persona === "tough"
      ? " –ù–∏–π –Ω—É—É–≥“Ø–π —è—Ä–∏–ª—Ü—ä—è"
      : persona === "parent"
      ? " ”®–Ω”©”©–¥”©—Ä ”©”©—Ä—Ç”©”© –±–∞–≥–∞—Ö–∞–Ω —á –≥—ç—Å—ç–Ω –∞–Ω—Ö–∞–∞—Ä–∞–∞—Ä–∞–π. üòä"
      : persona === "wise"
      ? " –ë—ç–ª—ç–Ω –±–æ–ª –¥–∞—Ä–∞–∞–≥–∏–π–Ω –∂–∏–∂–∏–≥ —Ö—ç—Å–≥–∏–π–≥ —Ç–æ–¥—Ä—É—É–ª—ä—è."
      : " –•“Ø—Å–≤—ç–ª —Ü–∞–∞—à —è—Ä–∏–ª—Ü—ä—è. üí¨";
  return /[?!]$/.test(s) ? s : s + end;
}
function enforceIdentity(s = "") {
  return s.trim();
}
